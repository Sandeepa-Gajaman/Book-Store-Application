/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package AssignmentMain;

import javax.swing.JOptionPane;
import java.sql.*;
import javax.swing.*;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;

/**
 *
 * @author HP
 */
public class ChangeQuantityFrame extends javax.swing.JFrame {
    
    private ItemController iController;
    private DefaultListModel listModel= new DefaultListModel();

    /**
     * Creates new form ChangeQuantityFrame
     */
    public ChangeQuantityFrame() {
        initComponents();
        iController = new ItemController();
        iController.setResult();
        ResultSet rs = iController.setResult();
        
        
        try{
            while(rs.next()){
                int tempId= rs.getInt(1);
                String tempItemName= rs.getString(2);
                String tempItemCategory=rs.getString(3);
                int tempQuantity=rs.getInt(4);
                float tempUnitPrice=rs.getFloat(5);
                
                String row= String.valueOf(tempId)+"   "+ tempItemName+"   "+tempItemCategory+"   "+String.valueOf(tempQuantity)+"   "+String.valueOf(tempUnitPrice);
                listModel.addElement(row);
                
            }
            jListQty.setModel(listModel);
        }
        catch(SQLException e){
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        textId = new javax.swing.JTextField();
        textQuantity = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnAddQty = new javax.swing.JButton();
        btnRemoveQty = new javax.swing.JButton();
        btnItemCon = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListQty = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        textQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textQuantityActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Enter Item ID");

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Quantity");

        btnAddQty.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnAddQty.setText("Add Quantity");
        btnAddQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddQtyActionPerformed(evt);
            }
        });

        btnRemoveQty.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnRemoveQty.setText("Remove Quantity");
        btnRemoveQty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveQtyActionPerformed(evt);
            }
        });

        btnItemCon.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        btnItemCon.setText("Back");
        btnItemCon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnItemConActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textId, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(btnAddQty, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnRemoveQty)
                .addGap(31, 31, 31))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(133, 133, 133)
                .addComponent(btnItemCon, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemoveQty)
                    .addComponent(btnAddQty))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnItemCon)
                .addGap(22, 22, 22))
        );

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Change Quantity of Items");

        jListQty.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jListQty.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(jListQty);

        jLabel7.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Unit Price");

        jLabel6.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Quantity");

        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Item Name");

        jLabel4.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Item Category");

        jLabel8.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Item ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(176, 176, 176)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel4)
                                .addGap(29, 29, 29)
                                .addComponent(jLabel5)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel6)
                                .addGap(33, 33, 33)
                                .addComponent(jLabel7))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(50, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddQtyActionPerformed
        
        int option = JOptionPane.showConfirmDialog(null, "Do you want to add quantity?", "Confirm Action",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        
        if(option==0){
        
        boolean num=false;
        
        try{
        
        int id = Integer.parseInt(textId.getText());
        if(id>=0) num=true;
        else throw new CheckPositiveNumbersException("Can't input negative values to Item ID!");
        int qty = Integer.parseInt(textQuantity.getText());
        if(qty>=0) num=true;
        else throw new CheckPositiveNumbersException("Can't input negative values to quantity!");
        
        
        iController.setQuantityForm(Integer.parseInt(textQuantity.getText()),Integer.parseInt(textId.getText()));
        
        int x= iController.addQty();
        
        if(x==1){
        JOptionPane.showMessageDialog(this, "Item Quantity added successfully.","Successful",JOptionPane.INFORMATION_MESSAGE);
        }
        else{
        JOptionPane.showMessageDialog(this, "Item Quantity adding process failed!","Unsuccessful",JOptionPane.ERROR);
        }
       
        iController.setResult();
        ResultSet rs = iController.setResult();
            
            
            listModel.removeAllElements();//remove the result set that created in frame before button click 
            while(rs.next()){
                int tempId= rs.getInt(1);
                String tempItemName= rs.getString(2);
                String tempItemCategory=rs.getString(3);
                int tempQuantity=rs.getInt(4);
                float tempUnitPrice=rs.getFloat(5);
                
                String row= String.valueOf(tempId)+"   "+ tempItemName+"   "+tempItemCategory+"   "+String.valueOf(tempQuantity)+"   "+String.valueOf(tempUnitPrice);
                listModel.addElement(row);
                
            }
            jListQty.setModel(listModel);
        }
        catch(CheckPositiveNumbersException e){
            JOptionPane.showMessageDialog(this, e.getMessage(),"Input Error",JOptionPane.ERROR_MESSAGE);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Input format for numbers are incorrect!","Input Format Error",JOptionPane.ERROR_MESSAGE);
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please Try Again","Error",JOptionPane.ERROR_MESSAGE);
        }
        
        textId.setText(null);
        textQuantity.setText(null);
        }
        else{//Confirm action "No"
        }
    }//GEN-LAST:event_btnAddQtyActionPerformed

    private void btnRemoveQtyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveQtyActionPerformed
        
        int option = JOptionPane.showConfirmDialog(null, "Do you want to remove quantity?", "Confirm Action",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        
        if(option==0){
        
        boolean num=false;    
        try{
        int id = Integer.parseInt(textId.getText());
        if(id>=0) num=true;
        else throw new CheckPositiveNumbersException("Can't input negative values to Item ID!");
        int qty = Integer.parseInt(textQuantity.getText());
        if(qty>=0) num=true;
        else throw new CheckPositiveNumbersException("Can't input negative values to quantity!");
        int quantityRequested = Integer.parseInt(textQuantity.getText());
        
        
        iController.setQuantityForm(Integer.parseInt(textQuantity.getText()),Integer.parseInt(textId.getText()));
        
        int x= iController.removeQty();
        
        if(x==1){
        JOptionPane.showMessageDialog(this, "Item Quantity removed successfully.","Successful",JOptionPane.INFORMATION_MESSAGE);
        }
        else{
        JOptionPane.showMessageDialog(this, "Item Quantity removing process failed!","Unsuccessful",JOptionPane.ERROR);
        }
        
        iController.setResult();
        ResultSet rs = iController.setResult();
        
        listModel.removeAllElements();//remove the result set that created in frame before button click 
            while(rs.next()){
                int tempId= rs.getInt(1);
                String tempItemName= rs.getString(2);
                String tempItemCategory=rs.getString(3);
                int tempQuantity=rs.getInt(4);
                float tempUnitPrice=rs.getFloat(5);
                
                String row= String.valueOf(tempId)+"   "+ tempItemName+"   "+tempItemCategory+"   "+String.valueOf(tempQuantity)+"   "+String.valueOf(tempUnitPrice);
                listModel.addElement(row);
                
            }
            jListQty.setModel(listModel);
        }
        catch(CheckPositiveNumbersException e){
            JOptionPane.showMessageDialog(this, e.getMessage(),"Input Error",JOptionPane.ERROR_MESSAGE);
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Input format for numbers are incorrect!","Input Format Error",JOptionPane.ERROR_MESSAGE);
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Please Try Again","Error",JOptionPane.ERROR_MESSAGE);
        }
        textId.setText(null);
        textQuantity.setText(null);
        }
        else{//Confirm action "No"
        }
    }//GEN-LAST:event_btnRemoveQtyActionPerformed

    private void textQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textQuantityActionPerformed

    private void btnItemConActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnItemConActionPerformed
        int option = JOptionPane.showConfirmDialog(null, "Do you want to go back to 'Items Controller Panel'?", "Confirm Action",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(option==0){
        ItemControllerFrame iCon = new ItemControllerFrame();
        iCon.setVisible(true);
        this.dispose();
        }
        else{
        
        }
    }//GEN-LAST:event_btnItemConActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangeQuantityFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangeQuantityFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangeQuantityFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangeQuantityFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChangeQuantityFrame().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddQty;
    private javax.swing.JButton btnItemCon;
    private javax.swing.JButton btnRemoveQty;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JList<String> jListQty;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField textId;
    private javax.swing.JTextField textQuantity;
    // End of variables declaration//GEN-END:variables
}
